# Makefile.in generated by automake 1.15.1 from Makefile.am.
# lib/cpp/test/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/thrift
pkgincludedir = $(includedir)/thrift
pkglibdir = $(libdir)/thrift
pkglibexecdir = $(libexecdir)/thrift
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
noinst_PROGRAMS = Benchmark$(EXEEXT) concurrency_test$(EXEEXT) \
	$(am__EXEEXT_2)
check_PROGRAMS = UnitTests$(EXEEXT) TFDTransportTest$(EXEEXT) \
	TPipedTransportTest$(EXEEXT) DebugProtoTest$(EXEEXT) \
	JSONProtoTest$(EXEEXT) OptionalRequiredTest$(EXEEXT) \
	RecursiveTest$(EXEEXT) SpecializationTest$(EXEEXT) \
	AllProtocolsTest$(EXEEXT) TransportTest$(EXEEXT) \
	TInterruptTest$(EXEEXT) TServerIntegrationTest$(EXEEXT) \
	SecurityTest$(EXEEXT) ZlibTest$(EXEEXT) \
	TFileTransportTest$(EXEEXT) link_test$(EXEEXT) \
	OpenSSLManualInitTest$(EXEEXT) EnumTest$(EXEEXT) \
	AnnotationTest$(EXEEXT) $(am__EXEEXT_1)
am__append_1 = \
	processor_test

am__append_2 = \
	TNonblockingServerTest \
	TNonblockingSSLServerTest

am__append_3 = \
  concurrency/MutexTest.cpp \
  concurrency/RWMutexStarveTest.cpp

subdir = lib/cpp/test
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/aclocal/ac_prog_bison.m4 \
	$(top_srcdir)/aclocal/ax_boost_base.m4 \
	$(top_srcdir)/aclocal/ax_check_openssl.m4 \
	$(top_srcdir)/aclocal/ax_compare_version.m4 \
	$(top_srcdir)/aclocal/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/aclocal/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/aclocal/ax_dmd.m4 \
	$(top_srcdir)/aclocal/ax_javac_and_java.m4 \
	$(top_srcdir)/aclocal/ax_lib_event.m4 \
	$(top_srcdir)/aclocal/ax_lib_zlib.m4 \
	$(top_srcdir)/aclocal/ax_lua.m4 \
	$(top_srcdir)/aclocal/ax_prog_dotnetcore_version.m4 \
	$(top_srcdir)/aclocal/ax_prog_haxe_version.m4 \
	$(top_srcdir)/aclocal/ax_prog_perl_modules.m4 \
	$(top_srcdir)/aclocal/ax_signed_right_shift.m4 \
	$(top_srcdir)/aclocal/ax_thrift_internal.m4 \
	$(top_srcdir)/aclocal/libtool.m4 \
	$(top_srcdir)/aclocal/ltoptions.m4 \
	$(top_srcdir)/aclocal/ltsugar.m4 \
	$(top_srcdir)/aclocal/ltversion.m4 \
	$(top_srcdir)/aclocal/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h \
	$(top_builddir)/lib/cpp/src/thrift/config.h \
	$(top_builddir)/lib/c_glib/src/thrift/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libprocessortest_la_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
nodist_libprocessortest_la_OBJECTS = gen-cpp/ChildService.lo \
	gen-cpp/EmptyService.lo gen-cpp/ParentService.lo \
	gen-cpp/proc_types.lo
libprocessortest_la_OBJECTS = $(nodist_libprocessortest_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libtestgencpp_la_DEPENDENCIES = $(top_builddir)/lib/cpp/libthrift.la
nodist_libtestgencpp_la_OBJECTS = gen-cpp/AnnotationTest_types.lo \
	gen-cpp/DebugProtoTest_types.lo gen-cpp/EnumTest_types.lo \
	gen-cpp/OptionalRequiredTest_types.lo \
	gen-cpp/Recursive_types.lo gen-cpp/ThriftTest_types.lo \
	gen-cpp/ThriftTest_constants.lo gen-cpp/TypedefTest_types.lo \
	ThriftTest_extras.lo DebugProtoTest_extras.lo
libtestgencpp_la_OBJECTS = $(nodist_libtestgencpp_la_OBJECTS)
am__EXEEXT_1 =  \
	TNonblockingServerTest$(EXEEXT) \
	TNonblockingSSLServerTest$(EXEEXT)
am__EXEEXT_2 = processor_test$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
am_AllProtocolsTest_OBJECTS = AllProtocolTests.$(OBJEXT)
AllProtocolsTest_OBJECTS = $(am_AllProtocolsTest_OBJECTS)
am__DEPENDENCIES_1 =
AllProtocolsTest_DEPENDENCIES = libtestgencpp.la $(am__DEPENDENCIES_1)
am_AnnotationTest_OBJECTS = AnnotationTest.$(OBJEXT)
AnnotationTest_OBJECTS = $(am_AnnotationTest_OBJECTS)
AnnotationTest_DEPENDENCIES = libtestgencpp.la $(am__DEPENDENCIES_1)
am_Benchmark_OBJECTS = Benchmark.$(OBJEXT)
Benchmark_OBJECTS = $(am_Benchmark_OBJECTS)
Benchmark_DEPENDENCIES = libtestgencpp.la
am_DebugProtoTest_OBJECTS = DebugProtoTest.$(OBJEXT)
DebugProtoTest_OBJECTS = $(am_DebugProtoTest_OBJECTS)
DebugProtoTest_DEPENDENCIES = libtestgencpp.la $(am__DEPENDENCIES_1)
am_EnumTest_OBJECTS = EnumTest.$(OBJEXT)
EnumTest_OBJECTS = $(am_EnumTest_OBJECTS)
EnumTest_DEPENDENCIES = libtestgencpp.la $(am__DEPENDENCIES_1)
am_JSONProtoTest_OBJECTS = JSONProtoTest.$(OBJEXT)
JSONProtoTest_OBJECTS = $(am_JSONProtoTest_OBJECTS)
JSONProtoTest_DEPENDENCIES = libtestgencpp.la $(am__DEPENDENCIES_1)
am_OpenSSLManualInitTest_OBJECTS = OpenSSLManualInitTest.$(OBJEXT)
OpenSSLManualInitTest_OBJECTS = $(am_OpenSSLManualInitTest_OBJECTS)
OpenSSLManualInitTest_DEPENDENCIES =  \
	$(top_builddir)/lib/cpp/libthrift.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_OptionalRequiredTest_OBJECTS = OptionalRequiredTest.$(OBJEXT)
OptionalRequiredTest_OBJECTS = $(am_OptionalRequiredTest_OBJECTS)
OptionalRequiredTest_DEPENDENCIES = libtestgencpp.la \
	$(am__DEPENDENCIES_1)
am_RecursiveTest_OBJECTS = RecursiveTest.$(OBJEXT)
RecursiveTest_OBJECTS = $(am_RecursiveTest_OBJECTS)
RecursiveTest_DEPENDENCIES = libtestgencpp.la $(am__DEPENDENCIES_1)
am_SecurityTest_OBJECTS = SecurityTest.$(OBJEXT)
SecurityTest_OBJECTS = $(am_SecurityTest_OBJECTS)
SecurityTest_DEPENDENCIES = libtestgencpp.la libprocessortest.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_SpecializationTest_OBJECTS = SpecializationTest.$(OBJEXT)
SpecializationTest_OBJECTS = $(am_SpecializationTest_OBJECTS)
SpecializationTest_DEPENDENCIES = libtestgencpp.la \
	$(am__DEPENDENCIES_1)
am_TFDTransportTest_OBJECTS = TFDTransportTest.$(OBJEXT)
TFDTransportTest_OBJECTS = $(am_TFDTransportTest_OBJECTS)
TFDTransportTest_DEPENDENCIES = $(top_builddir)/lib/cpp/libthrift.la \
	$(am__DEPENDENCIES_1)
am_TFileTransportTest_OBJECTS = TFileTransportTest.$(OBJEXT)
TFileTransportTest_OBJECTS = $(am_TFileTransportTest_OBJECTS)
TFileTransportTest_DEPENDENCIES = libtestgencpp.la \
	$(am__DEPENDENCIES_1)
am_TInterruptTest_OBJECTS = TSocketInterruptTest.$(OBJEXT) \
	TSSLSocketInterruptTest.$(OBJEXT)
TInterruptTest_OBJECTS = $(am_TInterruptTest_OBJECTS)
TInterruptTest_DEPENDENCIES = libtestgencpp.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_TNonblockingSSLServerTest_OBJECTS =  \
	TNonblockingSSLServerTest.$(OBJEXT)
TNonblockingSSLServerTest_OBJECTS =  \
	$(am_TNonblockingSSLServerTest_OBJECTS)
TNonblockingSSLServerTest_DEPENDENCIES = libprocessortest.la \
	$(top_builddir)/lib/cpp/libthrift.la \
	$(top_builddir)/lib/cpp/libthriftnb.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_TNonblockingServerTest_OBJECTS = TNonblockingServerTest.$(OBJEXT)
TNonblockingServerTest_OBJECTS = $(am_TNonblockingServerTest_OBJECTS)
TNonblockingServerTest_DEPENDENCIES = libprocessortest.la \
	$(top_builddir)/lib/cpp/libthrift.la \
	$(top_builddir)/lib/cpp/libthriftnb.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_TPipedTransportTest_OBJECTS = TPipedTransportTest.$(OBJEXT) \
	TPipeInterruptTest.$(OBJEXT)
TPipedTransportTest_OBJECTS = $(am_TPipedTransportTest_OBJECTS)
TPipedTransportTest_DEPENDENCIES = libtestgencpp.la \
	$(top_builddir)/lib/cpp/libthrift.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_TServerIntegrationTest_OBJECTS = TServerIntegrationTest.$(OBJEXT)
TServerIntegrationTest_OBJECTS = $(am_TServerIntegrationTest_OBJECTS)
TServerIntegrationTest_DEPENDENCIES = libtestgencpp.la \
	libprocessortest.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_TransportTest_OBJECTS = TransportTest.$(OBJEXT)
TransportTest_OBJECTS = $(am_TransportTest_OBJECTS)
TransportTest_DEPENDENCIES = libtestgencpp.la \
	$(top_builddir)/lib/cpp/libthriftz.la $(am__DEPENDENCIES_1)
am__UnitTests_SOURCES_DIST = UnitTestMain.cpp TMemoryBufferTest.cpp \
	TBufferBaseTest.cpp Base64Test.cpp ToStringTest.cpp \
	TypedefTest.cpp TServerSocketTest.cpp TServerTransportTest.cpp \
	TTransportCheckThrow.h concurrency/MutexTest.cpp \
	concurrency/RWMutexStarveTest.cpp
am__objects_1 =  \
	concurrency/MutexTest.$(OBJEXT) \
	concurrency/RWMutexStarveTest.$(OBJEXT)
am_UnitTests_OBJECTS = UnitTestMain.$(OBJEXT) \
	TMemoryBufferTest.$(OBJEXT) TBufferBaseTest.$(OBJEXT) \
	Base64Test.$(OBJEXT) ToStringTest.$(OBJEXT) \
	TypedefTest.$(OBJEXT) TServerSocketTest.$(OBJEXT) \
	TServerTransportTest.$(OBJEXT) $(am__objects_1)
UnitTests_OBJECTS = $(am_UnitTests_OBJECTS)
UnitTests_DEPENDENCIES = libtestgencpp.la $(am__DEPENDENCIES_1)
am_ZlibTest_OBJECTS = ZlibTest.$(OBJEXT)
ZlibTest_OBJECTS = $(am_ZlibTest_OBJECTS)
ZlibTest_DEPENDENCIES = libtestgencpp.la \
	$(top_builddir)/lib/cpp/libthriftz.la $(am__DEPENDENCIES_1)
am_concurrency_test_OBJECTS = concurrency/Tests.$(OBJEXT)
concurrency_test_OBJECTS = $(am_concurrency_test_OBJECTS)
concurrency_test_DEPENDENCIES = $(top_builddir)/lib/cpp/libthrift.la
am_link_test_OBJECTS = link/LinkTest.$(OBJEXT) \
	link/TemplatedService1.$(OBJEXT) \
	link/TemplatedService2.$(OBJEXT)
link_test_OBJECTS = $(am_link_test_OBJECTS)
link_test_LDADD = $(LDADD)
am_processor_test_OBJECTS = processor/ProcessorTest.$(OBJEXT) \
	processor/EventLog.$(OBJEXT) processor/ServerThread.$(OBJEXT)
processor_test_OBJECTS = $(am_processor_test_OBJECTS)
processor_test_DEPENDENCIES = libprocessortest.la \
	$(top_builddir)/lib/cpp/libthrift.la \
	$(top_builddir)/lib/cpp/libthriftnb.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir) -I$(top_builddir)/lib/cpp/src/thrift -I$(top_builddir)/lib/c_glib/src/thrift
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(nodist_libprocessortest_la_SOURCES) \
	$(nodist_libtestgencpp_la_SOURCES) $(AllProtocolsTest_SOURCES) \
	$(AnnotationTest_SOURCES) $(Benchmark_SOURCES) \
	$(DebugProtoTest_SOURCES) $(EnumTest_SOURCES) \
	$(JSONProtoTest_SOURCES) $(OpenSSLManualInitTest_SOURCES) \
	$(OptionalRequiredTest_SOURCES) $(RecursiveTest_SOURCES) \
	$(SecurityTest_SOURCES) $(SpecializationTest_SOURCES) \
	$(TFDTransportTest_SOURCES) $(TFileTransportTest_SOURCES) \
	$(TInterruptTest_SOURCES) $(TNonblockingSSLServerTest_SOURCES) \
	$(TNonblockingServerTest_SOURCES) \
	$(TPipedTransportTest_SOURCES) \
	$(TServerIntegrationTest_SOURCES) $(TransportTest_SOURCES) \
	$(UnitTests_SOURCES) $(ZlibTest_SOURCES) \
	$(concurrency_test_SOURCES) $(link_test_SOURCES) \
	$(processor_test_SOURCES)
DIST_SOURCES = $(AllProtocolsTest_SOURCES) $(AnnotationTest_SOURCES) \
	$(Benchmark_SOURCES) $(DebugProtoTest_SOURCES) \
	$(EnumTest_SOURCES) $(JSONProtoTest_SOURCES) \
	$(OpenSSLManualInitTest_SOURCES) \
	$(OptionalRequiredTest_SOURCES) $(RecursiveTest_SOURCES) \
	$(SecurityTest_SOURCES) $(SpecializationTest_SOURCES) \
	$(TFDTransportTest_SOURCES) $(TFileTransportTest_SOURCES) \
	$(TInterruptTest_SOURCES) $(TNonblockingSSLServerTest_SOURCES) \
	$(TNonblockingServerTest_SOURCES) \
	$(TPipedTransportTest_SOURCES) \
	$(TServerIntegrationTest_SOURCES) $(TransportTest_SOURCES) \
	$(am__UnitTests_SOURCES_DIST) $(ZlibTest_SOURCES) \
	$(concurrency_test_SOURCES) $(link_test_SOURCES) \
	$(processor_test_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__extra_recursive_targets = style-recursive
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/vagrant/Code/GitPro/thrift/missing aclocal-1.15
ALLOCA = 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
ANT = 
ANT_FLAGS = 
AR = ar
AUTOCONF = ${SHELL} /home/vagrant/Code/GitPro/thrift/missing autoconf
AUTOHEADER = ${SHELL} /home/vagrant/Code/GitPro/thrift/missing autoheader
AUTOMAKE = ${SHELL} /home/vagrant/Code/GitPro/thrift/missing automake-1.15
AWK = mawk
BISON = bison
BOOST_CHRONO_LDADD = /usr/lib/x86_64-linux-gnu/libboost_chrono.a
BOOST_CPPFLAGS = -I/usr/include
BOOST_FILESYSTEM_LDADD = /usr/lib/x86_64-linux-gnu/libboost_filesystem.a
BOOST_LDFLAGS = -L/usr/lib/x86_64-linux-gnu
BOOST_LIB_DIR = /usr/lib/x86_64-linux-gnu
BOOST_SYSTEM_LDADD = /usr/lib/x86_64-linux-gnu/libboost_system.a
BOOST_TEST_LDADD = /usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.a
BOOST_THREAD_LDADD = /usr/lib/x86_64-linux-gnu/libboost_thread.a
BUNDLER = 
CABAL = true
CABAL_CONFIGURE_FLAGS = 
CARGO = 
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CLASSPATH = 
CPP = gcc -E
CPPFLAGS = 
CPPSTYLE_CMD = find . -type f \( -iname "*.h" -or -iname "*.cpp" -or -iname "*.cc" -or -iname "*.tcc" \) -printf "Reformatting: %h/%f\n" -exec clang-format -i {} \;
CXX = g++ -std=c++11
CXXCPP = g++ -E -std=c++11
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DART = 
DARTPUB = 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DMD = 
DMD_LIBEVENT_FLAGS = 
DMD_OF_DIRSEP = 
DMD_OPENSSL_FLAGS = 
DOTNETCORE = 
DOTNETCORE_VERSION = 
DSYMUTIL = 
DUMPBIN = 
D_EVENT_LIB_NAME = libthriftd-event.a
D_IMPORT_PREFIX = ${prefix}/include/d2
D_LIB_NAME = libthriftd.a
D_SSL_LIB_NAME = libthriftd-ssl.a
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ENABLE_COVERAGE = 2
ERL = 
ERLANG_INSTALL_LIB_DIR = 
ERLANG_INSTALL_LIB_DIR_thrift = 
ERLANG_LIB_DIR = 
ERLC = 
ERLCFLAGS = 
EXEEXT = 
FGREP = /bin/grep -F
GCOV_CFLAGS = 
GCOV_CXXFLAGS = 
GCOV_LDFLAGS = 
GLIB_CFLAGS = 
GLIB_LIBS = 
GO = 
GOBJECT_CFLAGS = 
GOBJECT_LIBS = 
GREP = /bin/grep
HAVE_CXX11 = 1
HAXE = 
HAXE_VERSION = 
INSTALL = /usr/bin/install -c
INSTALLDIRS = vendor
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JAVA_PREFIX = /usr/local/lib
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LEX = flex
LEXLIB = -lfl
LEX_OUTPUT_ROOT = lex.yy
LIBEVENT_CPPFLAGS = 
LIBEVENT_LDFLAGS = 
LIBEVENT_LIBS = -levent
LIBOBJS = 
LIBS = -lrt -lpthread 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LUA = :
LUA_EXEC_PREFIX = 
LUA_INCLUDE = 
LUA_LIB = 
LUA_PLATFORM = 
LUA_PREFIX = 
LUA_SHORT_VERSION = 
LUA_VERSION = 
MAKEINFO = ${SHELL} /home/vagrant/Code/GitPro/thrift/missing makeinfo
MANIFEST_TOOL = :
MAYBE_CPP = cpp
MAYBE_CSHARP = 
MAYBE_C_GLIB = 
MAYBE_D = 
MAYBE_DART = 
MAYBE_DOTNETCORE = 
MAYBE_ERLANG = 
MAYBE_GO = 
MAYBE_HASKELL = 
MAYBE_JAVA = 
MAYBE_LUA = 
MAYBE_NODEJS = nodejs
MAYBE_PERL = 
MAYBE_PHP = php
MAYBE_PY3 = py3
MAYBE_PYTHON = py
MAYBE_RS = 
MAYBE_RUBY = 
MCS = 
MKDIR_P = /bin/mkdir -p
MONO_CFLAGS = 
MONO_LIBS = 
NM = /usr/bin/nm -B
NMEDIT = 
NODEJS = /usr/bin/nodejs
NPM = /usr/bin/npm
OBJDUMP = objdump
OBJEXT = o
OPENSSL_INCLUDES =  
OPENSSL_LDFLAGS =  
OPENSSL_LIBS = -lssl -lcrypto  
OTOOL = 
OTOOL64 = 
PACKAGE = thrift
PACKAGE_BUGREPORT = 
PACKAGE_NAME = thrift
PACKAGE_STRING = thrift 1.0.0-dev
PACKAGE_TARNAME = thrift
PACKAGE_URL = 
PACKAGE_VERSION = 1.0.0-dev
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PERL_PREFIX = /usr/local
PHP = /usr/bin/php
PHPUNIT = /home/vagrant/.config/composer/vendor/bin/phpunit
PHP_CONFIG = /usr/bin/php-config
PHP_CONFIG_PREFIX = /etc/php.d
PHP_PREFIX = /usr/lib/php
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PYTHON = /usr/bin/python
PYTHON3 = /usr/bin/python3
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_PLATFORM = linux2
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 2.7
PY_PREFIX = /usr
QT5_CFLAGS = 
QT5_LIBS = 
QT5_MOC = 
QT_CFLAGS = 
QT_LIBS = 
QT_MOC = 
RANLIB = ranlib
REBAR = 
RUBY = /usr/bin/ruby
RUBY_PREFIX = 
RUNHASKELL = true
RUSTC = 
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
THRIFT = /home/vagrant/Code/GitPro/thrift/compiler/cpp/thrift
TRIAL = /usr/local/bin/trial
VERSION = 1.0.0-dev
YACC = bison -y
YFLAGS = 
ZLIB_CPPFLAGS = 
ZLIB_LDFLAGS = 
ZLIB_LIBS = -lz
abs_builddir = /home/vagrant/Code/GitPro/thrift/lib/cpp/test
abs_srcdir = /home/vagrant/Code/GitPro/thrift/lib/cpp/test
abs_top_builddir = /home/vagrant/Code/GitPro/thrift
abs_top_srcdir = /home/vagrant/Code/GitPro/thrift
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
golang_version = 
have_prog_bison = yes
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/vagrant/Code/GitPro/thrift/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
luadir = 
luaexecdir = 
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgluadir = 
pkgluaexecdir = 
pkgpyexecdir = ${pyexecdir}/thrift
pkgpythondir = ${pythondir}/thrift
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib/python2.7/dist-packages
pythondir = ${prefix}/lib/python2.7/dist-packages
rustc_version = 
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  lib/php/src/ext/thrift_protocol
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../../
top_builddir = ../../..
top_srcdir = ../../..

#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements. See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership. The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
#
AUTOMAKE_OPTIONS = subdir-objects serial-tests
BUILT_SOURCES = gen-cpp/AnnotationTest_types.h \
                gen-cpp/DebugProtoTest_types.h \
                gen-cpp/EnumTest_types.h \
                gen-cpp/OptionalRequiredTest_types.h \
                gen-cpp/Recursive_types.h \
                gen-cpp/ThriftTest_types.h \
                gen-cpp/TypedefTest_types.h \
                gen-cpp/ChildService.h \
                gen-cpp/EmptyService.h \
                gen-cpp/ParentService.h \
                gen-cpp/proc_types.h

noinst_LTLIBRARIES = libtestgencpp.la libprocessortest.la
nodist_libtestgencpp_la_SOURCES = \
	gen-cpp/AnnotationTest_types.cpp \
	gen-cpp/AnnotationTest_types.h \
	gen-cpp/DebugProtoTest_types.cpp \
	gen-cpp/DebugProtoTest_types.h \
	gen-cpp/EnumTest_types.cpp \
	gen-cpp/EnumTest_types.h \
	gen-cpp/OptionalRequiredTest_types.cpp \
	gen-cpp/OptionalRequiredTest_types.h \
	gen-cpp/Recursive_types.cpp \
	gen-cpp/Recursive_types.h \
	gen-cpp/ThriftTest_types.cpp \
	gen-cpp/ThriftTest_types.h \
	gen-cpp/ThriftTest_constants.cpp \
	gen-cpp/ThriftTest_constants.h \
	gen-cpp/TypedefTest_types.cpp \
	gen-cpp/TypedefTest_types.h \
	ThriftTest_extras.cpp \
	DebugProtoTest_extras.cpp

nodist_libprocessortest_la_SOURCES = \
	gen-cpp/ChildService.cpp \
	gen-cpp/ChildService.h \
	gen-cpp/EmptyService.cpp \
	gen-cpp/EmptyService.h \
	gen-cpp/ParentService.cpp \
	gen-cpp/ParentService.h \
	gen-cpp/proc_types.cpp \
	gen-cpp/proc_types.h

libtestgencpp_la_LIBADD = $(top_builddir)/lib/cpp/libthrift.la
Benchmark_SOURCES = \
	Benchmark.cpp

Benchmark_LDADD = libtestgencpp.la
TESTS_ENVIRONMENT = \
	BOOST_TEST_LOG_SINK=tests.xml \
	BOOST_TEST_LOG_LEVEL=test_suite \
	BOOST_TEST_LOG_FORMAT=XML

TESTS = \
	$(check_PROGRAMS)

UnitTests_SOURCES = UnitTestMain.cpp TMemoryBufferTest.cpp \
	TBufferBaseTest.cpp Base64Test.cpp ToStringTest.cpp \
	TypedefTest.cpp TServerSocketTest.cpp TServerTransportTest.cpp \
	TTransportCheckThrow.h $(am__append_3)
UnitTests_LDADD = \
  libtestgencpp.la \
  $(BOOST_TEST_LDADD)

TInterruptTest_SOURCES = \
	TSocketInterruptTest.cpp \
	TSSLSocketInterruptTest.cpp

TInterruptTest_LDADD = \
  libtestgencpp.la \
  $(BOOST_TEST_LDADD) \
  $(BOOST_FILESYSTEM_LDADD) \
  $(BOOST_CHRONO_LDADD) \
  $(BOOST_SYSTEM_LDADD) \
  $(BOOST_THREAD_LDADD)

TServerIntegrationTest_SOURCES = \
	TServerIntegrationTest.cpp

TServerIntegrationTest_LDADD = \
  libtestgencpp.la \
  libprocessortest.la \
  $(BOOST_TEST_LDADD) \
  $(BOOST_SYSTEM_LDADD) \
  $(BOOST_THREAD_LDADD)

SecurityTest_SOURCES = \
	SecurityTest.cpp

SecurityTest_LDADD = \
  libtestgencpp.la \
  libprocessortest.la \
  $(BOOST_TEST_LDADD) \
  $(BOOST_FILESYSTEM_LDADD) \
  $(BOOST_SYSTEM_LDADD) \
  $(BOOST_THREAD_LDADD)

TransportTest_SOURCES = \
	TransportTest.cpp

TransportTest_LDADD = \
  libtestgencpp.la \
  $(top_builddir)/lib/cpp/libthriftz.la \
  $(BOOST_TEST_LDADD) \
  -lz

ZlibTest_SOURCES = \
	ZlibTest.cpp

ZlibTest_LDADD = \
  libtestgencpp.la \
  $(top_builddir)/lib/cpp/libthriftz.la \
  $(BOOST_TEST_LDADD) \
  -lz

EnumTest_SOURCES = \
	EnumTest.cpp

EnumTest_LDADD = \
  libtestgencpp.la \
  $(BOOST_TEST_LDADD)

AnnotationTest_SOURCES = \
	AnnotationTest.cpp

AnnotationTest_LDADD = \
  libtestgencpp.la \
  $(BOOST_TEST_LDADD)

TFileTransportTest_SOURCES = \
	TFileTransportTest.cpp

TFileTransportTest_LDADD = \
  libtestgencpp.la \
  $(BOOST_TEST_LDADD)


#
# TFDTransportTest
#
TFDTransportTest_SOURCES = \
	TFDTransportTest.cpp

TFDTransportTest_LDADD = \
	$(top_builddir)/lib/cpp/libthrift.la \
	$(BOOST_TEST_LDADD)


#
# TPipedTransportTest
#
TPipedTransportTest_SOURCES = \
	TPipedTransportTest.cpp \
	TPipeInterruptTest.cpp

TPipedTransportTest_LDADD = \
	libtestgencpp.la \
	$(top_builddir)/lib/cpp/libthrift.la \
	$(BOOST_TEST_LDADD) \
	$(BOOST_SYSTEM_LDADD) \
	$(BOOST_THREAD_LDADD)


#
# AllProtocolsTest
#
AllProtocolsTest_SOURCES = \
	AllProtocolTests.cpp \
	AllProtocolTests.tcc \
	GenericHelpers.h

AllProtocolsTest_LDADD = \
  libtestgencpp.la \
  $(BOOST_TEST_LDADD)


#
# DebugProtoTest
#
DebugProtoTest_SOURCES = \
	DebugProtoTest.cpp

DebugProtoTest_LDADD = \
	libtestgencpp.la \
	$(BOOST_TEST_LDADD)


#
# JSONProtoTest
#
JSONProtoTest_SOURCES = \
	JSONProtoTest.cpp

JSONProtoTest_LDADD = \
	libtestgencpp.la \
	$(BOOST_TEST_LDADD)


#
# TNonblockingServerTest
#
TNonblockingServerTest_SOURCES = TNonblockingServerTest.cpp
TNonblockingServerTest_LDADD = libprocessortest.la \
                               $(top_builddir)/lib/cpp/libthrift.la \
                               $(top_builddir)/lib/cpp/libthriftnb.la \
                               $(BOOST_TEST_LDADD) \
                               $(BOOST_LDFLAGS) \
                               $(LIBEVENT_LIBS)

#
# TNonblockingSSLServerTest
#
TNonblockingSSLServerTest_SOURCES = TNonblockingSSLServerTest.cpp
TNonblockingSSLServerTest_LDADD = libprocessortest.la \
                               $(top_builddir)/lib/cpp/libthrift.la \
                               $(top_builddir)/lib/cpp/libthriftnb.la \
                               $(BOOST_TEST_LDADD) \
                               $(BOOST_LDFLAGS) \
                               $(BOOST_FILESYSTEM_LDADD) \
                               $(BOOST_CHRONO_LDADD) \
                               $(BOOST_SYSTEM_LDADD) \
                               $(BOOST_THREAD_LDADD) \
                               $(LIBEVENT_LIBS)


#
# OptionalRequiredTest
#
OptionalRequiredTest_SOURCES = \
	OptionalRequiredTest.cpp

OptionalRequiredTest_LDADD = \
	libtestgencpp.la \
	$(BOOST_TEST_LDADD)


#
# OptionalRequiredTest
#
RecursiveTest_SOURCES = \
	RecursiveTest.cpp

RecursiveTest_LDADD = \
	libtestgencpp.la \
	$(BOOST_TEST_LDADD)


#
# SpecializationTest
#
SpecializationTest_SOURCES = \
	SpecializationTest.cpp

SpecializationTest_LDADD = \
	libtestgencpp.la \
	$(BOOST_TEST_LDADD)

concurrency_test_SOURCES = \
	concurrency/Tests.cpp \
	concurrency/ThreadFactoryTests.h \
	concurrency/ThreadManagerTests.h \
	concurrency/TimerManagerTests.h

concurrency_test_LDADD = \
  $(top_builddir)/lib/cpp/libthrift.la

link_test_SOURCES = \
  link/LinkTest.cpp \
  link/TemplatedService1.cpp \
  link/TemplatedService2.cpp

processor_test_SOURCES = \
	processor/ProcessorTest.cpp \
	processor/EventLog.cpp \
	processor/ServerThread.cpp \
	processor/EventLog.h \
	processor/Handlers.h \
	processor/ServerThread.h

processor_test_LDADD = libprocessortest.la \
                       $(top_builddir)/lib/cpp/libthrift.la \
                       $(top_builddir)/lib/cpp/libthriftnb.la \
                       $(BOOST_TEST_LDADD) \
                       $(BOOST_LDFLAGS) \
                       $(LIBEVENT_LIBS)

OpenSSLManualInitTest_SOURCES = \
	OpenSSLManualInitTest.cpp

OpenSSLManualInitTest_LDADD = \
	$(top_builddir)/lib/cpp/libthrift.la \
	$(BOOST_TEST_LDADD) \
	$(OPENSSL_LDFLAGS) \
	$(OPENSSL_LIBS)

AM_CPPFLAGS = $(BOOST_CPPFLAGS) -I$(top_srcdir)/lib/cpp/src -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -I.
AM_LDFLAGS = $(BOOST_LDFLAGS)
AM_CXXFLAGS = -Wall -Wextra -pedantic
EXTRA_DIST = \
	concurrency \
	processor \
	qt \
	CMakeLists.txt \
	DebugProtoTest_extras.cpp \
	ThriftTest_extras.cpp

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign lib/cpp/test/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign lib/cpp/test/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
gen-cpp/$(am__dirstamp):
	@$(MKDIR_P) gen-cpp
	@: > gen-cpp/$(am__dirstamp)
gen-cpp/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) gen-cpp/$(DEPDIR)
	@: > gen-cpp/$(DEPDIR)/$(am__dirstamp)
gen-cpp/ChildService.lo: gen-cpp/$(am__dirstamp) \
	gen-cpp/$(DEPDIR)/$(am__dirstamp)
gen-cpp/EmptyService.lo: gen-cpp/$(am__dirstamp) \
	gen-cpp/$(DEPDIR)/$(am__dirstamp)
gen-cpp/ParentService.lo: gen-cpp/$(am__dirstamp) \
	gen-cpp/$(DEPDIR)/$(am__dirstamp)
gen-cpp/proc_types.lo: gen-cpp/$(am__dirstamp) \
	gen-cpp/$(DEPDIR)/$(am__dirstamp)

libprocessortest.la: $(libprocessortest_la_OBJECTS) $(libprocessortest_la_DEPENDENCIES) $(EXTRA_libprocessortest_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK)  $(libprocessortest_la_OBJECTS) $(libprocessortest_la_LIBADD) $(LIBS)
gen-cpp/AnnotationTest_types.lo: gen-cpp/$(am__dirstamp) \
	gen-cpp/$(DEPDIR)/$(am__dirstamp)
gen-cpp/DebugProtoTest_types.lo: gen-cpp/$(am__dirstamp) \
	gen-cpp/$(DEPDIR)/$(am__dirstamp)
gen-cpp/EnumTest_types.lo: gen-cpp/$(am__dirstamp) \
	gen-cpp/$(DEPDIR)/$(am__dirstamp)
gen-cpp/OptionalRequiredTest_types.lo: gen-cpp/$(am__dirstamp) \
	gen-cpp/$(DEPDIR)/$(am__dirstamp)
gen-cpp/Recursive_types.lo: gen-cpp/$(am__dirstamp) \
	gen-cpp/$(DEPDIR)/$(am__dirstamp)
gen-cpp/ThriftTest_types.lo: gen-cpp/$(am__dirstamp) \
	gen-cpp/$(DEPDIR)/$(am__dirstamp)
gen-cpp/ThriftTest_constants.lo: gen-cpp/$(am__dirstamp) \
	gen-cpp/$(DEPDIR)/$(am__dirstamp)
gen-cpp/TypedefTest_types.lo: gen-cpp/$(am__dirstamp) \
	gen-cpp/$(DEPDIR)/$(am__dirstamp)

libtestgencpp.la: $(libtestgencpp_la_OBJECTS) $(libtestgencpp_la_DEPENDENCIES) $(EXTRA_libtestgencpp_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK)  $(libtestgencpp_la_OBJECTS) $(libtestgencpp_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

AllProtocolsTest$(EXEEXT): $(AllProtocolsTest_OBJECTS) $(AllProtocolsTest_DEPENDENCIES) $(EXTRA_AllProtocolsTest_DEPENDENCIES) 
	@rm -f AllProtocolsTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(AllProtocolsTest_OBJECTS) $(AllProtocolsTest_LDADD) $(LIBS)

AnnotationTest$(EXEEXT): $(AnnotationTest_OBJECTS) $(AnnotationTest_DEPENDENCIES) $(EXTRA_AnnotationTest_DEPENDENCIES) 
	@rm -f AnnotationTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(AnnotationTest_OBJECTS) $(AnnotationTest_LDADD) $(LIBS)

Benchmark$(EXEEXT): $(Benchmark_OBJECTS) $(Benchmark_DEPENDENCIES) $(EXTRA_Benchmark_DEPENDENCIES) 
	@rm -f Benchmark$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(Benchmark_OBJECTS) $(Benchmark_LDADD) $(LIBS)

DebugProtoTest$(EXEEXT): $(DebugProtoTest_OBJECTS) $(DebugProtoTest_DEPENDENCIES) $(EXTRA_DebugProtoTest_DEPENDENCIES) 
	@rm -f DebugProtoTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(DebugProtoTest_OBJECTS) $(DebugProtoTest_LDADD) $(LIBS)

EnumTest$(EXEEXT): $(EnumTest_OBJECTS) $(EnumTest_DEPENDENCIES) $(EXTRA_EnumTest_DEPENDENCIES) 
	@rm -f EnumTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(EnumTest_OBJECTS) $(EnumTest_LDADD) $(LIBS)

JSONProtoTest$(EXEEXT): $(JSONProtoTest_OBJECTS) $(JSONProtoTest_DEPENDENCIES) $(EXTRA_JSONProtoTest_DEPENDENCIES) 
	@rm -f JSONProtoTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(JSONProtoTest_OBJECTS) $(JSONProtoTest_LDADD) $(LIBS)

OpenSSLManualInitTest$(EXEEXT): $(OpenSSLManualInitTest_OBJECTS) $(OpenSSLManualInitTest_DEPENDENCIES) $(EXTRA_OpenSSLManualInitTest_DEPENDENCIES) 
	@rm -f OpenSSLManualInitTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(OpenSSLManualInitTest_OBJECTS) $(OpenSSLManualInitTest_LDADD) $(LIBS)

OptionalRequiredTest$(EXEEXT): $(OptionalRequiredTest_OBJECTS) $(OptionalRequiredTest_DEPENDENCIES) $(EXTRA_OptionalRequiredTest_DEPENDENCIES) 
	@rm -f OptionalRequiredTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(OptionalRequiredTest_OBJECTS) $(OptionalRequiredTest_LDADD) $(LIBS)

RecursiveTest$(EXEEXT): $(RecursiveTest_OBJECTS) $(RecursiveTest_DEPENDENCIES) $(EXTRA_RecursiveTest_DEPENDENCIES) 
	@rm -f RecursiveTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(RecursiveTest_OBJECTS) $(RecursiveTest_LDADD) $(LIBS)

SecurityTest$(EXEEXT): $(SecurityTest_OBJECTS) $(SecurityTest_DEPENDENCIES) $(EXTRA_SecurityTest_DEPENDENCIES) 
	@rm -f SecurityTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(SecurityTest_OBJECTS) $(SecurityTest_LDADD) $(LIBS)

SpecializationTest$(EXEEXT): $(SpecializationTest_OBJECTS) $(SpecializationTest_DEPENDENCIES) $(EXTRA_SpecializationTest_DEPENDENCIES) 
	@rm -f SpecializationTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(SpecializationTest_OBJECTS) $(SpecializationTest_LDADD) $(LIBS)

TFDTransportTest$(EXEEXT): $(TFDTransportTest_OBJECTS) $(TFDTransportTest_DEPENDENCIES) $(EXTRA_TFDTransportTest_DEPENDENCIES) 
	@rm -f TFDTransportTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(TFDTransportTest_OBJECTS) $(TFDTransportTest_LDADD) $(LIBS)

TFileTransportTest$(EXEEXT): $(TFileTransportTest_OBJECTS) $(TFileTransportTest_DEPENDENCIES) $(EXTRA_TFileTransportTest_DEPENDENCIES) 
	@rm -f TFileTransportTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(TFileTransportTest_OBJECTS) $(TFileTransportTest_LDADD) $(LIBS)

TInterruptTest$(EXEEXT): $(TInterruptTest_OBJECTS) $(TInterruptTest_DEPENDENCIES) $(EXTRA_TInterruptTest_DEPENDENCIES) 
	@rm -f TInterruptTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(TInterruptTest_OBJECTS) $(TInterruptTest_LDADD) $(LIBS)

TNonblockingSSLServerTest$(EXEEXT): $(TNonblockingSSLServerTest_OBJECTS) $(TNonblockingSSLServerTest_DEPENDENCIES) $(EXTRA_TNonblockingSSLServerTest_DEPENDENCIES) 
	@rm -f TNonblockingSSLServerTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(TNonblockingSSLServerTest_OBJECTS) $(TNonblockingSSLServerTest_LDADD) $(LIBS)

TNonblockingServerTest$(EXEEXT): $(TNonblockingServerTest_OBJECTS) $(TNonblockingServerTest_DEPENDENCIES) $(EXTRA_TNonblockingServerTest_DEPENDENCIES) 
	@rm -f TNonblockingServerTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(TNonblockingServerTest_OBJECTS) $(TNonblockingServerTest_LDADD) $(LIBS)

TPipedTransportTest$(EXEEXT): $(TPipedTransportTest_OBJECTS) $(TPipedTransportTest_DEPENDENCIES) $(EXTRA_TPipedTransportTest_DEPENDENCIES) 
	@rm -f TPipedTransportTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(TPipedTransportTest_OBJECTS) $(TPipedTransportTest_LDADD) $(LIBS)

TServerIntegrationTest$(EXEEXT): $(TServerIntegrationTest_OBJECTS) $(TServerIntegrationTest_DEPENDENCIES) $(EXTRA_TServerIntegrationTest_DEPENDENCIES) 
	@rm -f TServerIntegrationTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(TServerIntegrationTest_OBJECTS) $(TServerIntegrationTest_LDADD) $(LIBS)

TransportTest$(EXEEXT): $(TransportTest_OBJECTS) $(TransportTest_DEPENDENCIES) $(EXTRA_TransportTest_DEPENDENCIES) 
	@rm -f TransportTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(TransportTest_OBJECTS) $(TransportTest_LDADD) $(LIBS)
concurrency/$(am__dirstamp):
	@$(MKDIR_P) concurrency
	@: > concurrency/$(am__dirstamp)
concurrency/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) concurrency/$(DEPDIR)
	@: > concurrency/$(DEPDIR)/$(am__dirstamp)
concurrency/MutexTest.$(OBJEXT): concurrency/$(am__dirstamp) \
	concurrency/$(DEPDIR)/$(am__dirstamp)
concurrency/RWMutexStarveTest.$(OBJEXT): concurrency/$(am__dirstamp) \
	concurrency/$(DEPDIR)/$(am__dirstamp)

UnitTests$(EXEEXT): $(UnitTests_OBJECTS) $(UnitTests_DEPENDENCIES) $(EXTRA_UnitTests_DEPENDENCIES) 
	@rm -f UnitTests$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(UnitTests_OBJECTS) $(UnitTests_LDADD) $(LIBS)

ZlibTest$(EXEEXT): $(ZlibTest_OBJECTS) $(ZlibTest_DEPENDENCIES) $(EXTRA_ZlibTest_DEPENDENCIES) 
	@rm -f ZlibTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(ZlibTest_OBJECTS) $(ZlibTest_LDADD) $(LIBS)
concurrency/Tests.$(OBJEXT): concurrency/$(am__dirstamp) \
	concurrency/$(DEPDIR)/$(am__dirstamp)

concurrency_test$(EXEEXT): $(concurrency_test_OBJECTS) $(concurrency_test_DEPENDENCIES) $(EXTRA_concurrency_test_DEPENDENCIES) 
	@rm -f concurrency_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(concurrency_test_OBJECTS) $(concurrency_test_LDADD) $(LIBS)
link/$(am__dirstamp):
	@$(MKDIR_P) link
	@: > link/$(am__dirstamp)
link/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) link/$(DEPDIR)
	@: > link/$(DEPDIR)/$(am__dirstamp)
link/LinkTest.$(OBJEXT): link/$(am__dirstamp) \
	link/$(DEPDIR)/$(am__dirstamp)
link/TemplatedService1.$(OBJEXT): link/$(am__dirstamp) \
	link/$(DEPDIR)/$(am__dirstamp)
link/TemplatedService2.$(OBJEXT): link/$(am__dirstamp) \
	link/$(DEPDIR)/$(am__dirstamp)

link_test$(EXEEXT): $(link_test_OBJECTS) $(link_test_DEPENDENCIES) $(EXTRA_link_test_DEPENDENCIES) 
	@rm -f link_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(link_test_OBJECTS) $(link_test_LDADD) $(LIBS)
processor/$(am__dirstamp):
	@$(MKDIR_P) processor
	@: > processor/$(am__dirstamp)
processor/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) processor/$(DEPDIR)
	@: > processor/$(DEPDIR)/$(am__dirstamp)
processor/ProcessorTest.$(OBJEXT): processor/$(am__dirstamp) \
	processor/$(DEPDIR)/$(am__dirstamp)
processor/EventLog.$(OBJEXT): processor/$(am__dirstamp) \
	processor/$(DEPDIR)/$(am__dirstamp)
processor/ServerThread.$(OBJEXT): processor/$(am__dirstamp) \
	processor/$(DEPDIR)/$(am__dirstamp)

processor_test$(EXEEXT): $(processor_test_OBJECTS) $(processor_test_DEPENDENCIES) $(EXTRA_processor_test_DEPENDENCIES) 
	@rm -f processor_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(processor_test_OBJECTS) $(processor_test_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f concurrency/*.$(OBJEXT)
	-rm -f gen-cpp/*.$(OBJEXT)
	-rm -f gen-cpp/*.lo
	-rm -f link/*.$(OBJEXT)
	-rm -f processor/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/AllProtocolTests.Po
include ./$(DEPDIR)/AnnotationTest.Po
include ./$(DEPDIR)/Base64Test.Po
include ./$(DEPDIR)/Benchmark.Po
include ./$(DEPDIR)/DebugProtoTest.Po
include ./$(DEPDIR)/DebugProtoTest_extras.Plo
include ./$(DEPDIR)/EnumTest.Po
include ./$(DEPDIR)/JSONProtoTest.Po
include ./$(DEPDIR)/OpenSSLManualInitTest.Po
include ./$(DEPDIR)/OptionalRequiredTest.Po
include ./$(DEPDIR)/RecursiveTest.Po
include ./$(DEPDIR)/SecurityTest.Po
include ./$(DEPDIR)/SpecializationTest.Po
include ./$(DEPDIR)/TBufferBaseTest.Po
include ./$(DEPDIR)/TFDTransportTest.Po
include ./$(DEPDIR)/TFileTransportTest.Po
include ./$(DEPDIR)/TMemoryBufferTest.Po
include ./$(DEPDIR)/TNonblockingSSLServerTest.Po
include ./$(DEPDIR)/TNonblockingServerTest.Po
include ./$(DEPDIR)/TPipeInterruptTest.Po
include ./$(DEPDIR)/TPipedTransportTest.Po
include ./$(DEPDIR)/TSSLSocketInterruptTest.Po
include ./$(DEPDIR)/TServerIntegrationTest.Po
include ./$(DEPDIR)/TServerSocketTest.Po
include ./$(DEPDIR)/TServerTransportTest.Po
include ./$(DEPDIR)/TSocketInterruptTest.Po
include ./$(DEPDIR)/ThriftTest_extras.Plo
include ./$(DEPDIR)/ToStringTest.Po
include ./$(DEPDIR)/TransportTest.Po
include ./$(DEPDIR)/TypedefTest.Po
include ./$(DEPDIR)/UnitTestMain.Po
include ./$(DEPDIR)/ZlibTest.Po
include concurrency/$(DEPDIR)/MutexTest.Po
include concurrency/$(DEPDIR)/RWMutexStarveTest.Po
include concurrency/$(DEPDIR)/Tests.Po
include gen-cpp/$(DEPDIR)/AnnotationTest_types.Plo
include gen-cpp/$(DEPDIR)/ChildService.Plo
include gen-cpp/$(DEPDIR)/DebugProtoTest_types.Plo
include gen-cpp/$(DEPDIR)/EmptyService.Plo
include gen-cpp/$(DEPDIR)/EnumTest_types.Plo
include gen-cpp/$(DEPDIR)/OptionalRequiredTest_types.Plo
include gen-cpp/$(DEPDIR)/ParentService.Plo
include gen-cpp/$(DEPDIR)/Recursive_types.Plo
include gen-cpp/$(DEPDIR)/ThriftTest_constants.Plo
include gen-cpp/$(DEPDIR)/ThriftTest_types.Plo
include gen-cpp/$(DEPDIR)/TypedefTest_types.Plo
include gen-cpp/$(DEPDIR)/proc_types.Plo
include link/$(DEPDIR)/LinkTest.Po
include link/$(DEPDIR)/TemplatedService1.Po
include link/$(DEPDIR)/TemplatedService2.Po
include processor/$(DEPDIR)/EventLog.Po
include processor/$(DEPDIR)/ProcessorTest.Po
include processor/$(DEPDIR)/ServerThread.Po

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf gen-cpp/.libs gen-cpp/_libs
style-local: 

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst $(AM_TESTS_FD_REDIRECT); then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    col="$$grn"; \
	  else \
	    col="$$red"; \
	  fi; \
	  echo "$${col}$$dashes$${std}"; \
	  echo "$${col}$$banner$${std}"; \
	  test -z "$$skipped" || echo "$${col}$$skipped$${std}"; \
	  test -z "$$report" || echo "$${col}$$report$${std}"; \
	  echo "$${col}$$dashes$${std}"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS)
installdirs:
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f concurrency/$(DEPDIR)/$(am__dirstamp)
	-rm -f concurrency/$(am__dirstamp)
	-rm -f gen-cpp/$(DEPDIR)/$(am__dirstamp)
	-rm -f gen-cpp/$(am__dirstamp)
	-rm -f link/$(DEPDIR)/$(am__dirstamp)
	-rm -f link/$(am__dirstamp)
	-rm -f processor/$(DEPDIR)/$(am__dirstamp)
	-rm -f processor/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool clean-local \
	clean-noinstLTLIBRARIES clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR) concurrency/$(DEPDIR) gen-cpp/$(DEPDIR) link/$(DEPDIR) processor/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR) concurrency/$(DEPDIR) gen-cpp/$(DEPDIR) link/$(DEPDIR) processor/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

style: style-am

style-am: style-local

uninstall-am:

.MAKE: all check check-am install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool clean-local \
	clean-noinstLTLIBRARIES clean-noinstPROGRAMS cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	style-am style-local tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


ThriftTest_extras.o: gen-cpp/ThriftTest_types.h
DebugProtoTest_extras.o: gen-cpp/DebugProtoTest_types.h

#
# Common thrift code generation rules
#

gen-cpp/AnnotationTest_constants.cpp gen-cpp/AnnotationTest_constants.h gen-cpp/AnnotationTest_types.cpp gen-cpp/AnnotationTest_types.h: $(top_srcdir)/test/AnnotationTest.thrift
	$(THRIFT) --gen cpp $<

gen-cpp/DebugProtoTest_types.cpp gen-cpp/DebugProtoTest_types.h gen-cpp/EmptyService.cpp gen-cpp/EmptyService.h: $(top_srcdir)/test/DebugProtoTest.thrift
	$(THRIFT) --gen cpp $<

gen-cpp/EnumTest_types.cpp gen-cpp/EnumTest_types.h: $(top_srcdir)/test/EnumTest.thrift
	$(THRIFT) --gen cpp $<

gen-cpp/TypedefTest_types.cpp gen-cpp/TypedefTest_types.h: $(top_srcdir)/test/TypedefTest.thrift
	$(THRIFT) --gen cpp $<

gen-cpp/OptionalRequiredTest_types.cpp gen-cpp/OptionalRequiredTest_types.h: $(top_srcdir)/test/OptionalRequiredTest.thrift
	$(THRIFT) --gen cpp $<

gen-cpp/Recursive_types.cpp gen-cpp/Recursive_types.h: $(top_srcdir)/test/Recursive.thrift
	$(THRIFT) --gen cpp $<

gen-cpp/Service.cpp gen-cpp/StressTest_types.cpp: $(top_srcdir)/test/StressTest.thrift
	$(THRIFT) --gen cpp $<

gen-cpp/SecondService.cpp gen-cpp/ThriftTest_constants.cpp gen-cpp/ThriftTest.cpp gen-cpp/ThriftTest_types.cpp gen-cpp/ThriftTest_types.h: $(top_srcdir)/test/ThriftTest.thrift
	$(THRIFT) --gen cpp $<

gen-cpp/ChildService.cpp gen-cpp/ChildService.h gen-cpp/ParentService.cpp gen-cpp/ParentService.h gen-cpp/proc_types.cpp gen-cpp/proc_types.h: processor/proc.thrift
	$(THRIFT) --gen cpp:templates,cob_style $<

clean-local:
	$(RM) gen-cpp/*

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
